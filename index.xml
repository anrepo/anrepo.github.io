<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Главная on Портфолио</title>
    <link>https://anrepo.github.io/</link>
    <description>Recent content in Главная on Портфолио</description>
    <generator>Hugo</generator>
    <language>ru</language>
    <copyright>Все права защищены</copyright>
    <lastBuildDate>Tue, 16 Jul 2024 15:49:29 +0300</lastBuildDate>
    <atom:link href="https://anrepo.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Подключение шрифтов</title>
      <link>https://anrepo.github.io/blog/font-include/</link>
      <pubDate>Tue, 16 Jul 2024 15:49:29 +0300</pubDate>
      <guid>https://anrepo.github.io/blog/font-include/</guid>
      <description>&lt;link rel=&#34;stylesheet&#34; href=&#34;./style.css&#34;&gt;&#xA;&lt;h2 id=&#34;include-fonts&#34;&gt;Подключение шрифтов&lt;/h2&gt;&#xA;&lt;p&gt;Если в наборе есть не все форматы, их можно получить перекодировкой с помощью сервисов:&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://transfonter.org/&#34;&gt;Online @font-face generator&lt;/a&gt; - Конвертирует шрифты и возвращает архив с готовыми стилями @font-face&lt;/p&gt;&#xA;&lt;p&gt;Другие конвертеры: &lt;a href=&#34;https://convertio.co/ru/ttf-woff/&#34;&gt;convertio.co&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;форматы-шрифтов&#34;&gt;Форматы шрифтов&lt;/h1&gt;&#xA;&lt;p&gt;&lt;strong&gt;TTF/OTF&lt;/strong&gt; – работают в большинстве браузеров, кроме IE.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;EOT&lt;/strong&gt; – создан Microsoft, представляет сжатую копию шрифта TTF, поддерживается только в IE.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;WOFF&lt;/strong&gt; – формат представляет собой сжатый шрифт в формате TTF/OTF.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;WOFF2&lt;/strong&gt; – имеет улучшенное сжатие, по сравнению с первой версией.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Эффект: &#34;Вращающийся текст&#34; (Spinning Text)</title>
      <link>https://anrepo.github.io/blog/sinning-text/</link>
      <pubDate>Fri, 28 Jun 2024 10:21:10 +0300</pubDate>
      <guid>https://anrepo.github.io/blog/sinning-text/</guid>
      <description>&lt;style&gt;&#xA;&#x9;h1 {&#xA;&#x9;&#x9;margin-bottom: 60px;&#xA;&#x9;}&#xA;&#xA;&#x9;.post.container {&#xA;&#x9;&#x9;padding-bottom: 60px;&#xA;&#x9;}&#xA;&#xA;&#x9;[data-page=&#34;page--spinning-text&#34;] .section-container {&#xA;&#x9;&#x9;padding-top: 80px;&#xA;&#x9;}&#xA;&#xA;&#x9;[data-page=&#34;page--spinning-text&#34;] .rotatingHeader {&#xA;&#x9;&#x9;width: fit-content;&#xA;&#x9;&#x9;white-space: nowrap;&#xA;&#x9;}&#xA;&#xA;&#x9;[data-page=&#34;page--spinning-text&#34;] .rotatingHeader h1 {&#xA;&#x9;&#x9;font-family: &#39;Saira Extra Condensed&#39;, sans-serif;&#xA;&#x9;&#x9;color: #444;&#xA;&#x9;&#x9;font-size: 80px;&#xA;&#x9;&#x9;margin: 0;&#xA;&#x9;&#x9;padding: 0;&#xA;&#x9;&#x9;line-height: 0.5;&#xA;&#x9;&#x9;perspective: 800px;&#xA;&#x9;}&#xA;&#xA;&#x9;[data-page=&#34;page--spinning-text&#34;] .rotatingHeader h1:nth-child(2) {&#xA;&#x9;&#x9;color: #efefef;&#xA;&#x9;}&#xA;&#xA;&#x9;html[data-theme=&#34;light&#34;][data-page=&#34;page--spinning-text&#34;] .rotatingHeader h1 {&#xA;&#x9;&#x9;color: var(--bgc-footer);&#xA;&#x9;}&#xA;&#xA;&#x9;html[data-theme=&#34;light&#34;][data-page=&#34;page--spinning-text&#34;] .rotatingHeader h1:nth-child(2) {&#xA;&#x9;&#x9;color: var(--color);&#xA;&#x9;}&#xA;&lt;/style&gt;&#xA;&#xA;&lt;div class=&#34;rotatingHeader&#34;&gt;&#xA;&#x9;&lt;h1&gt;Скручивание через 3 сек&lt;/h1&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;script src=&#34;https://cdn.jsdelivr.net/npm/gsap@3.12.5/dist/gsap.min.js&#34;&gt;&lt;/script&gt;&#xA;&lt;script&gt;&#xA;&#x9;const tl = gsap.timeline();&#xA;&#xA;&#x9;function gsapAnimationOne() {&#xA;&#x9;&#x9;let header = document.querySelector(&#34;.rotatingHeader&#34;);&#xA;&#x9;&#x9;let splitElement = header.querySelector(&#34;h1&#34;);&#xA;&#x9;&#x9;let cloneElement = splitElement.cloneNode(true);&#xA;&#xA;&#x9;&#x9;header.appendChild(cloneElement);&#xA;&#x9;&#x9;gsap.set(cloneElement, { yPercent: -100 });&#xA;&#xA;&#x9;&#x9;let splitElementSplitted = splitElement.textContent.split(&#39;&#39;);&#xA;&#x9;&#x9;let cloneSplitElement = splitElement.textContent.split(&#39;&#39;);&#xA;&#xA;&#x9;&#x9;let splitElementChars = [];&#xA;&#x9;&#x9;let cloneSplitElementChars = [];&#xA;&#xA;&#x9;&#x9;// clean element&#xA;&#x9;&#x9;splitElement.innerHTML = &#34;&#34;;&#xA;&#x9;&#x9;cloneElement.innerHTML = &#34;&#34;;&#xA;&#xA;&#x9;&#x9;function charGenerate(splitElementSplitted, splitElement, splitElementChars) {&#xA;&#x9;&#x9;&#x9;splitElementSplitted.forEach(element =&gt; {&#xA;&#x9;&#x9;&#x9;&#x9;if (element !== &#39; &#39;) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;const letter = document.createElement(&#39;div&#39;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;letter.style = &#39;display: inline-block&#39;;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;letter.classList.add(&#39;char&#39;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;letter.innerHTML = element;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;splitElement.appendChild(letter);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;splitElementChars.push(letter);&#xA;&#x9;&#x9;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;const space = document.createTextNode(&#39; &#39;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;space.innerHTML = element;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;splitElement.appendChild(space);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;});&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;charGenerate(splitElementSplitted, splitElement, splitElementChars);&#xA;&#x9;&#x9;charGenerate(cloneSplitElement, cloneElement, cloneSplitElementChars);&#xA;&#xA;&#x9;&#x9;// global tween settings&#xA;&#x9;&#x9;let duration = 0.7;&#xA;&#x9;&#x9;let stagger = {each: 0.05, ease: &#34;linear&#34;, from: &#34;start&#34;};&#xA;&#xA;&#x9;&#x9;gsap.set(cloneSplitElementChars, { rotationX: -90, opacity: 0, transformOrigin: &#34;50% 50% -40&#34; });&#xA;&#xA;&#x9;&#x9;tl.to(splitElementChars, { duration: duration, rotationX: 90, transformOrigin: &#34;50% 50% -40&#34;, stagger: stagger });&#xA;&#x9;&#x9;tl.to(splitElementChars, { duration: duration, opacity: 0, stagger: stagger, ease: &#34;linear&#34;}, 0);&#xA;&#xA;&#x9;&#x9;tl.to(cloneSplitElementChars, { duration: 0.05, opacity: 1, stagger: stagger }, 0.001);&#xA;&#x9;&#x9;tl.to(cloneSplitElementChars, { duration: duration, rotationX: 0, stagger: stagger }, 0);&#xA;&#x9;}&#xA;&#xA;&#x9;setTimeout(() =&gt; {&#xA;&#x9;&#x9;gsapAnimationOne();&#xA;&#x9;}, 3000);&#xA;&lt;/script&gt;</description>
    </item>
    <item>
      <title>Конвертер в мнемоники</title>
      <link>https://anrepo.github.io/blog/mnemonic-converter/</link>
      <pubDate>Mon, 06 May 2024 21:36:13 +0300</pubDate>
      <guid>https://anrepo.github.io/blog/mnemonic-converter/</guid>
      <description>&lt;style&gt;&#xA;&#x9;#input,&#xA;&#x9;#output {&#xA;&#x9;&#x9;resize: vertical;&#xA;&#x9;}&#xA;&lt;/style&gt;&#xA;&#xA;&lt;p&gt;Преобразование спец. символов в символы мнемоники.&lt;/p&gt;&#xA;&lt;p&gt;Будет полезно для публикации кода разметки на сайте.&lt;/p&gt;&#xA;&lt;p&gt;Так заменяются:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&#x9;&lt;li&gt;&lt;code&gt;&amp;&lt;/code&gt; на &lt;code&gt;&amp;amp;amp;&lt;/code&gt;&lt;/li&gt;&#xA;&#x9;&lt;li&gt;&lt;code&gt;&#39;&lt;/code&gt; на &lt;code&gt;&amp;amp;#39;&lt;/code&gt;&lt;/li&gt;&#xA;&#x9;&lt;li&gt;&lt;code&gt;&#34;&lt;/code&gt; на &lt;code&gt;&amp;amp;quot;&lt;/code&gt;&lt;/li&gt;&#xA;&#x9;&lt;li&gt;&lt;code&gt;&lt;&lt;/code&gt; на &lt;code&gt;&amp;amp;lt;&lt;/code&gt;&lt;/li&gt;&#xA;&#x9;&lt;li&gt;&lt;code&gt;&gt;&lt;/code&gt; на &lt;code&gt;&amp;amp;gt;&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Для папримера: &lt;code&gt;I&amp;#39;m print tag &amp;quot;&amp;lt;p&amp;gt;&amp;quot; &amp;amp; tag &amp;quot;&amp;lt;a&amp;gt;&amp;quot;, &amp;amp; &amp;quot;&amp;lt;ul&amp;gt;&amp;quot;&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&lt;textarea id=&#34;input&#34; name=&#34;input&#34; rows=&#34;6&#34; cols=&#34;100%&#34; placeholder=&#34;Введите текст&#34;&gt;&lt;/textarea&gt;&#xA;&lt;br&gt;&#xA;&lt;textarea id=&#34;output&#34; name=&#34;output&#34; rows=&#34;6&#34; cols=&#34;100%&#34; placeholder=&#34;Результат...&#34;&gt;&lt;/textarea&gt;&#xA;&lt;br&gt;&#xA;&lt;button id=&#34;convert&#34; type=&#34;button&#34;&gt;Преобразовать&lt;/button&gt;&#xA;&#xA;&lt;script&gt;&#xA;&#x9;const inputElement = document.querySelector(&#39;#input&#39;);&#xA;&#x9;const outputElement = document.querySelector(&#39;#output&#39;);&#xA;&#x9;const button = document.querySelector(&#39;#convert&#39;);&#xA;&#xA;&#x9;const convertObject = {&#xA;&#x9;&#x9;&#39;&amp;&#39;: &#39;&amp;amp;&#39;,&#xA;&#x9;&#x9;&#39;\&#39;&#39;: &#39;&amp;#39;&#39;,&#xA;&#x9;&#x9;&#39;&#34;&#39;: &#39;&amp;quot;&#39;,&#xA;&#x9;&#x9;&#39;&lt;&#39;: &#39;&amp;lt;&#39;,&#xA;&#x9;&#x9;&#39;&gt;&#39;: &#39;&amp;gt;&#39;,&#xA;&#x9;}&#xA;&#xA;&#x9;button.addEventListener(&#39;click&#39;, function() {&#xA;&#x9;&#x9;let outputText = inputText = inputElement.value;&#xA;&#xA;&#x9;&#x9;for (const item in convertObject) {&#xA;&#x9;&#x9;&#x9;outputText = outputText.replaceAll(item, convertObject[item]);&#xA;&#x9;&#x9;&#x9;console.log(`Замена ${item} на ${convertObject[item]}`);&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;outputElement.value = outputText;&#xA;&#x9;});&#xA;&lt;/script&gt;</description>
    </item>
    <item>
      <title>Обратная связь</title>
      <link>https://anrepo.github.io/contact/</link>
      <pubDate>Tue, 28 Jun 2022 17:17:31 +0300</pubDate>
      <guid>https://anrepo.github.io/contact/</guid>
      <description>&lt;div class=&#34;list&#34;&gt;&#xA;    &lt;form class=&#34;feedback-form&#34; action=&#34;&#34;&gt;&#xA;        &lt;label for=&#34;&#34;&gt;&#xA;            &lt;input id=&#34;name&#34; type=&#34;text&#34; name=&#34;&#34; id=&#34;&#34; placeholder=&#34;Ваше имя&#34; value=&#34;&#34; required&gt;&#xA;        &lt;/label&gt;&#xA;        &lt;label for=&#34;&#34;&gt;&#xA;            &lt;input id=&#34;email&#34; type=&#34;email&#34; name=&#34;Email&#34; id=&#34;&#34; placeholder=&#34;Email&#34; required value=&#34;&#34;&gt;&#xA;        &lt;/label&gt;&#xA;        &lt;textarea id=&#34;body&#34; name=&#34;Message&#34; placeholder=&#34;Напишите мне что-нибудь хорошее...&#34; autocorrect=&#34;on&#34;&gt;&lt;/textarea&gt;&#xA;        &lt;input class=&#34;btn form-submit&#34; type=&#34;button&#34; value=&#34;Отправить&#34;&gt;&#xA;    &lt;/form&gt;&#xA;&lt;/div&gt;&#xA;&lt;script src=&#34;https://anrepo.github.io/js/components/feedback-form.js&#34;&gt;&lt;/script&gt;</description>
    </item>
    <item>
      <title>Markdown</title>
      <link>https://anrepo.github.io/blog/markdown/</link>
      <pubDate>Mon, 20 Jun 2022 10:41:40 +0300</pubDate>
      <guid>https://anrepo.github.io/blog/markdown/</guid>
      <description>&lt;p&gt;Настоящий документ предназначен для ознакомления пользователя с функциональными возможностями языка разметки Markdown.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Markdown&lt;/strong&gt; – это облегченный язык разметки, который является инструментом преобразования кода в HTML.&#xA;Главной особенностью данного языка является максимально простой синтаксис, который служит для упрощения написания и чтения кода разметки, что, в свою очередь, позволяет легко его корректировать.&lt;/p&gt;&#xA;&lt;p&gt;Теперь рассмотрим более подробно функции языка разметки Markdown.&lt;/p&gt;&#xA;&lt;p&gt;Markdown не является заменой HTML. Синтаксис Markdown достаточно ограничен, и соответствует лишь небольшому подмножеству элементов HTML. Он включает в себя следующие элементы:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
